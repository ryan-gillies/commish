{"version":3,"sources":["components/Cards/LeaderboardCard.js","components/Typography/SectionTitle.js","pages/Leaderboards.js"],"names":["LeaderboardCard","title","lines","selected","onClick","headers","reduce","acc","user","player","position","week","opponent","score","record","points","points_against","net_points","className","map","index","key","SectionTitle","children","Leaderboards","useState","pools","setPools","selectedCard","leaderboards","setLeaderboards","setLoading","useEffect","a","fetch","response","ok","Error","json","data","sort","b","label","localeCompare","console","error","fetchData","filter","pool","pool_subtype","forEach","pool_id","statusText","prevLeaderboards","PageTitle","entry","username","player_name","toLocaleString","minimumFractionDigits","maximumFractionDigits","undefined","total_wins","total_losses","total_points_for","total_points_against"],"mappings":"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","file":"static/js/6.ace484ef.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, CardBody } from '@windmill/react-ui';\n\nfunction LeaderboardCard({ title, lines, selected, onClick }) {\n  \n  const headers = lines.reduce((acc, { user, player, position, week, opponent, score, record, points, points_against, net_points }) => {\n    if (user) acc.user = true;\n    if (player) acc.player = true;\n    if (week) acc.week = true;\n    if (opponent) acc.opponent = true;\n    if (score) acc.score = true;\n    if (record) acc.record = true;\n    if (points) acc.points = true;\n    if (points_against) acc.points_against = true;\n    if (net_points) acc.net_points = true;\n    if (position) acc.position = true;\n    return acc;\n  }, {});\n\n  return (\n    <Card className={selected ? 'bg-blue-200' : ''} onClick={onClick}>\n      {/* Title with padding */}\n      <p className=\"text-lg font-semibold mb-2 text-center pt-4 text-gray-700 dark:text-gray-200\">{title}</p>\n      <CardBody className=\"flex flex-col\">\n        {/* Render headers */}\n        <div className=\"flex items-center\">\n          {headers.user && (\n            <div className=\"w-2/5 text-left ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">User</p>\n            </div>\n          )}\n          {headers.player && (\n            <div className=\"w-2/5 text-left ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Player</p>\n            </div>\n          )}\n          {headers.position &&(\n            <div className=\"w-1/5 text-left ml-4\">\n            <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Position</p>\n          </div>          )}\n          {headers.opponent && (\n            <div className=\"w-2/5 text-left ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Opponent</p>\n            </div>\n          )}\n          {headers.week && (\n            <div className=\"w-1/5 text-left ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Week</p>\n            </div>\n          )}\n          {headers.score && (\n            <div className=\"w-1/5 text-center ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\"></p>\n            </div>\n          )}\n          {headers.record && (\n            <div className=\"w-1/5 text-center ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Record</p>\n            </div>\n          )}\n          {headers.points && (\n            <div className=\"w-1/5 text-center ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Pts For</p>\n            </div>\n          )}\n          {headers.points_against && (\n            <div className=\"w-1/5 text-center ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Pts Against</p>\n            </div>\n          )}\n          {headers.net_points && (\n            <div className=\"w-1/5 text-center ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Net Points</p>\n            </div>\n          )}\n        </div>\n        {/* Render each row */}\n        {lines.map(({ user, player, position, week, opponent, score, record, points, points_against, net_points }, index) => (\n          <div key={index} className=\"flex items-center\">\n            {user && (\n              <div className=\"w-2/5 text-left ml-4\">\n                <p className=\"text-sm font-semibold text-gray-600 dark:text-gray-100\">{user}</p>\n              </div>\n            )}\n            {player && (\n              <div className=\"w-2/5 text-left ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{player}</p>\n              </div>\n            )}\n            {position && (\n              <div className=\"w-1/5 text-left ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{position}</p>\n              </div>\n            )}\n            {opponent && (\n              <div className=\"w-2/5 text-left ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{opponent}</p>\n              </div>\n            )}\n            {week && (\n              <div className=\"w-1/5 text-left ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{week}</p>\n              </div>\n            )}\n            {score && (\n              <div className=\"w-1/5 text-right ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{score}</p>\n              </div>\n            )}\n            {record && (\n              <div className=\"w-1/5 text-right ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{record}</p>\n              </div>\n            )}\n            {points && (\n              <div className=\"w-1/5 text-right ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{points}</p>\n              </div>\n            )}\n            {points_against && (\n              <div className=\"w-1/5 text-right ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{points_against}</p>\n              </div>\n            )}\n            {net_points && (\n              <div className=\"w-1/5 text-right ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{net_points}</p>\n              </div>\n            )}\n          </div>\n        ))}\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default LeaderboardCard;\n","import React from 'react'\n\nfunction SectionTitle({ children }) {\n  return <h2 className=\"mb-4 text-lg font-semibold text-purple-600 dark:text-purple-300\">{children}</h2>\n}\n\nexport default SectionTitle\n","import React, { useEffect, useState } from 'react';\nimport PageTitle from '../components/Typography/PageTitle';\nimport SectionTitle from '../components/Typography/SectionTitle';\nimport LeaderboardCard from '../components/Cards/LeaderboardCard';\nimport selectedSeason from './Payouts';\n\nfunction Leaderboards() {\n  const leagueId = '978439391255322624';\n\n  const [pools, setPools] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [leaderboards, setLeaderboards] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('/api/v1/pools');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPools(data.sort((a, b) => a.label.localeCompare(b.label)));\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching pools:', error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    pools.filter(pool => pool.pool_subtype === 'season_high'|| pool.pool_subtype === 'season_cumulative').forEach(async (pool) => {\n      try {\n        const response = await fetch(`/api/v1/pools/leaderboard?league_id=${leagueId}&pool_id=${pool.pool_id}`);\n        if (!response.ok) {\n          console.error(`Error fetching leaderboard for pool ${pool.pool_id}: ${response.statusText}`);\n          return; // Continue to next pool if error occurs\n        }\n        const data = await response.json();\n        setLeaderboards(prevLeaderboards => ({ ...prevLeaderboards, [pool.pool_id]: data }));\n      } catch (error) {\n        console.error('Error fetching leaderboards:', error);\n      }\n    });\n  }, [leagueId, pools]);\n\n\n  // const handleCardClick = (id) => {\n  //   setSelectedCard(id === selectedCard ? null : id); // Toggle selection\n  // };\n\n  return (\n    <>\n      <PageTitle>Leaderboards</PageTitle>\n\n      <SectionTitle>Season Highs</SectionTitle>\n\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-2\">\n\n        {pools\n          .filter(pool => pool.pool_subtype === 'season_high')\n          .map((pool) => (\n            <LeaderboardCard\n              key={pool.pool_id}\n              title={pool.label}\n              lines={leaderboards[pool.pool_id]?.map((entry) => ({\n                user: entry.username,\n                week: entry.week,\n                opponent: entry.opponent,\n                player: entry.player_name,\n                position: entry.position,\n                score: entry.score ? entry.score.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2}) : undefined,\n              })) || []}\n              selected={selectedCard === pool.pool_id}\n              // onClick={() => handleCardClick(pool.pool_id)}\n            />\n          ))}\n      </div>\n\n      <SectionTitle>Season Cumulatives</SectionTitle>\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-2\">\n\n        {pools\n          .filter(pool => pool.pool_subtype === 'season_cumulative')\n          .map((pool) => (\n            <LeaderboardCard\n              key={pool.pool_id}\n              title={pool.label}\n              lines={leaderboards[pool.pool_id]?.map((entry) => ({\n                user: entry.username,\n                record: entry.total_wins ? `${entry.total_wins}-${entry.total_losses}` : undefined,\n                points: entry.total_points_for ? entry.total_points_for.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2}) : undefined,\n                points_against: entry.total_points_against ? entry.total_points_against.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2}) : undefined,\n                net_points: entry.total_points_for && entry.total_points_against ? (entry.total_points_for - entry.total_points_against).toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2}) : undefined,\n                player: entry.player_name,\n                position: entry.position,\n                score: entry.score ? entry.score.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2}) : undefined,\n              })) || []}\n\n              selected={selectedCard === pool.pool_id}\n              // onClick={() => handleCardClick(pool.pool_id)}\n            />\n          ))}\n      </div>\n\n    </>\n  );\n}\n\nexport default Leaderboards;\n\n"],"sourceRoot":""}