{"ast":null,"code":"var _jsxFileName = \"/Users/ryan.gillies/Documents/side_judge/src/pages/Payouts.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport PageTitle from '../components/Typography/PageTitle';\nimport { Table, TableHeader, TableCell, TableBody, TableRow, TableFooter, TableContainer, Select, Label, Pagination } from '@windmill/react-ui';\nimport { Icon } from '@iconify/react';\nimport arrowDown from '@iconify/icons-heroicons-solid/arrow-down';\nimport { Bar } from 'react-chartjs-2';\nimport ChartCard from '../components/Chart/ChartCard';\n\nfunction PayoutDetails() {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const [seasons, setSeasons] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedSeason, setSelectedSeason] = useState(searchParams.get('season'));\n  const [selectedUser, setSelectedUser] = useState(searchParams.get('username'));\n  const [pageTable, setPageTable] = useState(1);\n  const [dataTable, setDataTable] = useState([]);\n  const [chartData, setChartData] = useState([]);\n  const [sortBy, setSortBy] = useState('amount');\n  const [sortDirection, setSortDirection] = useState('desc');\n  const [totalResults, setTotalResults] = useState(0);\n  const resultsPerPage = 10;\n\n  function onPageChangeTable(p) {\n    setPageTable(p);\n  }\n\n  useEffect(() => {\n    async function fetchSeasons() {\n      try {\n        const response = await fetch(`/api/v1/leagues/seasons`);\n\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n\n        const data = await response.json();\n        setSeasons(data);\n      } catch (error) {\n        console.error('Error fetching seasons:', error);\n      }\n    }\n\n    fetchSeasons();\n  }, []);\n  useEffect(() => {\n    async function fetchUsers() {\n      try {\n        const response = await fetch(`/api/v1/users`);\n\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n\n        const data = await response.json();\n        setUsers(data);\n      } catch (error) {\n        console.error('Error fetching seasons:', error);\n      }\n    }\n\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    async function fetchPayouts() {\n      try {\n        let url = '/api/v1/payouts/';\n\n        if (selectedSeason) {\n          url = `/api/v1/payouts/${selectedSeason}`;\n        }\n\n        const response = await fetch(url);\n\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n\n        const data = await response.json();\n        const usernames = [...new Set(data.map(payout => payout.name))];\n        const poolTypes = [...new Set(data.map(payout => payout.pool_type))];\n        const poolTypeColors = {\n          'main': '#7e3af2',\n          'side': '#0694a2'\n        }; // Initialize an empty object to hold aggregated payouts for each user\n\n        const userPayouts = {}; // Loop through each user and pool type to aggregate payouts\n\n        usernames.forEach(name => {\n          // Initialize an empty array to hofld payouts for the current user\n          userPayouts[name] = []; // Loop through each pool type to aggregate payouts for the current user\n\n          poolTypes.sort();\n          poolTypes.forEach(poolType => {\n            // Filter payouts for the current user and pool type\n            const payoutsForUserAndType = data.filter(payout => payout.name === name && payout.pool_type === poolType); // Sum up the payouts for the current user and pool type\n\n            const totalPayoutForUserAndType = payoutsForUserAndType.reduce((sum, payout) => sum + payout.amount, 0); // Push the total payout for the current user and pool type to the array\n\n            userPayouts[name].push(totalPayoutForUserAndType);\n          });\n        }); // Sort the usernames based on total payout amount\n\n        usernames.sort((a, b) => {\n          const totalPayoutA = userPayouts[a].reduce((sum, amount) => sum + amount, 0);\n          const totalPayoutB = userPayouts[b].reduce((sum, amount) => sum + amount, 0);\n          return totalPayoutB - totalPayoutA;\n        }); // Create datasets for each pool type\n\n        const datasets = poolTypes.map(type => {\n          return {\n            label: type,\n            data: usernames.map(username => userPayouts[username][poolTypes.indexOf(type)]),\n            backgroundColor: poolTypeColors[type],\n            stack: 'stack'\n          };\n        });\n        const chartData = {\n          labels: usernames,\n          datasets\n        };\n        setChartData(chartData);\n      } catch (error) {\n        console.error('Error fetching payouts:', error);\n      }\n    }\n\n    fetchPayouts().catch(console.error); // Log any errors thrown\n  }, [selectedSeason]);\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      callbacks: {\n        label: function (tooltipItem, data) {\n          let value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index]; // Format the value as currency with $#,###.##\n\n          return value.toLocaleString('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n          });\n        }\n      }\n    },\n    scales: {\n      xAxes: [{\n        stacked: true\n      }],\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          userCallback: function (value, index, values) {\n            return value.toLocaleString('en-US', {\n              style: 'currency',\n              currency: 'USD',\n              minimumFractionDigits: 0,\n              maximumFractionDigits: 0\n            });\n          }\n        }\n      }]\n    }\n  };\n\n  const handleBarClick = (event, chartElements) => {\n    if (chartElements.length > 0) {\n      const clickedIndex = chartElements[0].index;\n      const clickedUsername = chartData.labels[clickedIndex];\n      setSelectedUser(clickedUsername); // Update selectedUser state\n    }\n  }; // Function to handle dropdown change event\n\n\n  const handleUserDropdownChange = e => {\n    setSelectedUser(e.target.value); // Update selectedUser state\n  };\n\n  useEffect(() => {\n    async function fetchPayoutDetails() {\n      try {\n        let url = '/api/v1/payoutdetails';\n\n        if (selectedSeason && selectedUser) {\n          url += `?season=${selectedSeason}&username=${selectedUser}`;\n        } else if (selectedSeason) {\n          url += `?season=${selectedSeason}`;\n        } else if (selectedUser) {\n          url += `?username=${selectedUser}`;\n        }\n\n        const response = await fetch(url);\n\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n\n        const data = await response.json();\n        setDataTable(data);\n        setTotalResults(data.length);\n        setPageTable(1);\n      } catch (error) {\n        console.error('Error fetching payouts:', error);\n      }\n    }\n\n    fetchPayoutDetails();\n  }, [selectedSeason, selectedUser]);\n  const sortedData = [...dataTable];\n\n  if (sortBy) {\n    sortedData.sort((a, b) => {\n      const valA = a[sortBy];\n      const valB = b[sortBy];\n      if (valA < valB) return sortDirection === 'asc' ? -1 : 1;\n      if (valA > valB) return sortDirection === 'asc' ? 1 : -1;\n      return 0;\n    });\n  }\n\n  const startIndex = (pageTable - 1) * resultsPerPage;\n  const endIndex = Math.min(startIndex + resultsPerPage, totalResults);\n  const paginatedData = sortedData.slice(startIndex, endIndex);\n\n  function formatAmount(amount) {\n    // Format the amount as currency with $#,###.##\n    return amount.toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }, \"Payouts\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, \"Season\"), /*#__PURE__*/React.createElement(Select, {\n    className: \"mb-4\",\n    value: selectedSeason,\n    onChange: e => setSelectedSeason(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, \"All-Time\"), seasons.map(season => /*#__PURE__*/React.createElement(\"option\", {\n    key: season,\n    value: season,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }, season))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChartCard, {\n    title: \"Payouts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: chartData,\n    options: chartOptions,\n    getElementAtEvent: (event, chartElements) => handleBarClick(event, chartElements),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, \"User\"), /*#__PURE__*/React.createElement(Select, {\n    className: \"mb-4\",\n    value: selectedUser,\n    onChange: handleUserDropdownChange // Call handleUserDropdownChange on change\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, \"All Users\"), users.map(user => /*#__PURE__*/React.createElement(\"option\", {\n    key: user.username,\n    value: user.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }, user.name))))), /*#__PURE__*/React.createElement(TableContainer, {\n    className: \"mb-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: \"cursor-pointer\",\n    onClick: () => {\n      setSortBy('username');\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 17\n    }\n  }, \"User\", sortBy === 'username' && /*#__PURE__*/React.createElement(Icon, {\n    className: `ml-1 transform ${sortDirection === 'asc' ? 'rotate-180' : ''}`,\n    icon: arrowDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"cursor-pointer\",\n    onClick: () => {\n      setSortBy('pool');\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }\n  }, \"Pool\", sortBy === 'pool' && /*#__PURE__*/React.createElement(Icon, {\n    className: `ml-1 transform ${sortDirection === 'asc' ? 'rotate-180' : ''}`,\n    icon: arrowDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"cursor-pointer\",\n    onClick: () => {\n      setSortBy('season');\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }\n  }, \"Season\", sortBy === 'season' && /*#__PURE__*/React.createElement(Icon, {\n    className: `ml-1 transform ${sortDirection === 'asc' ? 'rotate-180' : ''}`,\n    icon: arrowDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"cursor-pointer\",\n    onClick: () => {\n      setSortBy('week');\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 17\n    }\n  }, \"Week\", sortBy === 'week' && /*#__PURE__*/React.createElement(Icon, {\n    className: `ml-1 transform ${sortDirection === 'asc' ? 'rotate-180' : ''}`,\n    icon: arrowDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"cursor-pointer\",\n    onClick: () => {\n      setSortBy('amount');\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 17\n    }\n  }, \"Amount\", sortBy === 'amount' && /*#__PURE__*/React.createElement(Icon, {\n    className: `ml-1 transform ${sortDirection === 'asc' ? 'rotate-180' : ''}`,\n    icon: arrowDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 11\n    }\n  }, paginatedData.map((payout, i) => /*#__PURE__*/React.createElement(TableRow, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 23\n    }\n  }, payout.name)))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 23\n    }\n  }, payout.pool)))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 23\n    }\n  }, payout.season)))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 23\n    }\n  }, payout.week)))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 23\n    }\n  }, formatAmount(payout.amount))))))))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 9\n    }\n  }, totalResults > resultsPerPage && /*#__PURE__*/React.createElement(Pagination, {\n    totalResults: totalResults,\n    resultsPerPage: resultsPerPage,\n    onChange: onPageChangeTable,\n    currentPage: pageTable,\n    label: \"Table navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default PayoutDetails;","map":{"version":3,"sources":["/Users/ryan.gillies/Documents/side_judge/src/pages/Payouts.js"],"names":["React","useState","useEffect","useLocation","useHistory","PageTitle","Table","TableHeader","TableCell","TableBody","TableRow","TableFooter","TableContainer","Select","Label","Pagination","Icon","arrowDown","Bar","ChartCard","PayoutDetails","location","searchParams","URLSearchParams","search","seasons","setSeasons","users","setUsers","selectedSeason","setSelectedSeason","get","selectedUser","setSelectedUser","pageTable","setPageTable","dataTable","setDataTable","chartData","setChartData","sortBy","setSortBy","sortDirection","setSortDirection","totalResults","setTotalResults","resultsPerPage","onPageChangeTable","p","fetchSeasons","response","fetch","ok","Error","data","json","error","console","fetchUsers","fetchPayouts","url","usernames","Set","map","payout","name","poolTypes","pool_type","poolTypeColors","userPayouts","forEach","sort","poolType","payoutsForUserAndType","filter","totalPayoutForUserAndType","reduce","sum","amount","push","a","b","totalPayoutA","totalPayoutB","datasets","type","label","username","indexOf","backgroundColor","stack","labels","catch","chartOptions","responsive","maintainAspectRatio","tooltips","callbacks","tooltipItem","value","datasetIndex","index","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","scales","xAxes","stacked","yAxes","ticks","beginAtZero","userCallback","values","handleBarClick","event","chartElements","length","clickedIndex","clickedUsername","handleUserDropdownChange","e","target","fetchPayoutDetails","sortedData","valA","valB","startIndex","endIndex","Math","min","paginatedData","slice","formatAmount","marginBottom","season","user","i","pool","week"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport PageTitle from '../components/Typography/PageTitle';\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableBody,\n  TableRow,\n  TableFooter,\n  TableContainer,\n  Select,\n  Label,\n  Pagination,\n} from '@windmill/react-ui';\nimport { Icon } from '@iconify/react';\nimport arrowDown from '@iconify/icons-heroicons-solid/arrow-down';\nimport { Bar } from 'react-chartjs-2';\nimport ChartCard from '../components/Chart/ChartCard'\n\nfunction PayoutDetails() {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const [seasons, setSeasons] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedSeason, setSelectedSeason] = useState(searchParams.get('season'));\n  const [selectedUser, setSelectedUser] = useState(searchParams.get('username'));\n\n  const [pageTable, setPageTable] = useState(1);\n  const [dataTable, setDataTable] = useState([]);\n  const [chartData, setChartData] = useState([]);\n  const [sortBy, setSortBy] = useState('amount');\n  const [sortDirection, setSortDirection] = useState('desc');\n  const [totalResults, setTotalResults] = useState(0);\n  const resultsPerPage = 10;\n\n  function onPageChangeTable(p) {\n    setPageTable(p);\n  }\n\n  useEffect(() => {\n    async function fetchSeasons() {\n      try {\n        const response = await fetch(`/api/v1/leagues/seasons`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSeasons(data);\n      } catch (error) {\n        console.error('Error fetching seasons:', error);\n      }\n    }\n\n    fetchSeasons();\n  }, []);\n\n  useEffect(() => {\n    async function fetchUsers() {\n      try {\n        const response = await fetch(`/api/v1/users`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setUsers(data);\n      } catch (error) {\n        console.error('Error fetching seasons:', error);\n      }\n    }\n\n    fetchUsers();\n  }, []);\n\n\n  useEffect(() => {\n    async function fetchPayouts() {\n      try {\n        let url = '/api/v1/payouts/';\n        if (selectedSeason) {\n          url = `/api/v1/payouts/${selectedSeason}`;\n        }\n\n        const response = await fetch(url);\n\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n\n        const data = await response.json();\n\n        const usernames = [...new Set(data.map((payout) => payout.name))];\n        const poolTypes = [...new Set(data.map((payout) => payout.pool_type))];\n        const poolTypeColors = {\n          'main': '#7e3af2',\n          'side': '#0694a2',\n        };\n\n        // Initialize an empty object to hold aggregated payouts for each user\n        const userPayouts = {};\n\n        // Loop through each user and pool type to aggregate payouts\n        usernames.forEach(name => {\n          // Initialize an empty array to hofld payouts for the current user\n          userPayouts[name] = [];\n\n          // Loop through each pool type to aggregate payouts for the current user\n          poolTypes.sort();\n          poolTypes.forEach(poolType => {\n            // Filter payouts for the current user and pool type\n            const payoutsForUserAndType = data.filter(payout => payout.name === name && payout.pool_type === poolType);\n            // Sum up the payouts for the current user and pool type\n            const totalPayoutForUserAndType = payoutsForUserAndType.reduce((sum, payout) => sum + payout.amount, 0);\n            // Push the total payout for the current user and pool type to the array\n            userPayouts[name].push(totalPayoutForUserAndType);\n          });\n        });\n\n        // Sort the usernames based on total payout amount\n        usernames.sort((a, b) => {\n          const totalPayoutA = userPayouts[a].reduce((sum, amount) => sum + amount, 0);\n          const totalPayoutB = userPayouts[b].reduce((sum, amount) => sum + amount, 0);\n          return totalPayoutB - totalPayoutA;\n        });\n\n        // Create datasets for each pool type\n        const datasets = poolTypes.map((type) => {\n          return {\n            label: type,\n            data: usernames.map((username) => userPayouts[username][poolTypes.indexOf(type)]),\n            backgroundColor: poolTypeColors[type],\n            stack: 'stack',\n          };\n        });\n\n        const chartData = {\n          labels: usernames,\n          datasets,\n        };\n\n        setChartData(chartData);\n      } catch (error) {\n        console.error('Error fetching payouts:', error);\n      }\n    }\n    fetchPayouts().catch(console.error); // Log any errors thrown\n  }, [selectedSeason]);\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      callbacks: {\n        label: function (tooltipItem, data) {\n          let value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n          // Format the value as currency with $#,###.##\n          return value.toLocaleString('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n          });\n        }\n      }\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            userCallback: function (value, index, values) {\n              return value.toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\n            }\n          }\n        }\n      ],\n    },\n  };\n\n  const handleBarClick = (event, chartElements) => {\n    if (chartElements.length > 0) {\n      const clickedIndex = chartElements[0].index;\n      const clickedUsername = chartData.labels[clickedIndex];\n      setSelectedUser(clickedUsername); // Update selectedUser state\n    }\n  };\n\n  // Function to handle dropdown change event\n  const handleUserDropdownChange = (e) => {\n    setSelectedUser(e.target.value); // Update selectedUser state\n  };\n\n  useEffect(() => {\n    async function fetchPayoutDetails() {\n      try {\n        let url = '/api/v1/payoutdetails';\n\n        if (selectedSeason && selectedUser) {\n          url += `?season=${selectedSeason}&username=${selectedUser}`;\n        } else if (selectedSeason) {\n          url += `?season=${selectedSeason}`;\n        } else if (selectedUser) {\n          url += `?username=${selectedUser}`;\n        }\n\n        const response = await fetch(url);\n\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n\n        const data = await response.json();\n        setDataTable(data);\n        setTotalResults(data.length);\n        setPageTable(1);\n      } catch (error) {\n        console.error('Error fetching payouts:', error);\n      }\n    }\n\n    fetchPayoutDetails();\n  }, [selectedSeason, selectedUser]);\n\n\n\n  const sortedData = [...dataTable];\n  if (sortBy) {\n    sortedData.sort((a, b) => {\n      const valA = a[sortBy];\n      const valB = b[sortBy];\n      if (valA < valB) return sortDirection === 'asc' ? -1 : 1;\n      if (valA > valB) return sortDirection === 'asc' ? 1 : -1;\n      return 0;\n    });\n  }\n\n  const startIndex = (pageTable - 1) * resultsPerPage;\n  const endIndex = Math.min(startIndex + resultsPerPage, totalResults);\n  const paginatedData = sortedData.slice(startIndex, endIndex);\n\n  function formatAmount(amount) {\n    // Format the amount as currency with $#,###.##\n    return amount.toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  }\n\n  return (\n    <>\n      <PageTitle>Payouts</PageTitle>\n\n      {/* Dropdown to select season */}\n      <div style={{ marginBottom: '20px' }}>\n        <Label>\n          <strong>Season</strong>\n          <Select\n            className=\"mb-4\"\n            value={selectedSeason}\n            onChange={(e) => setSelectedSeason(e.target.value)}\n          >\n            <option value=\"\">All-Time</option>\n            {seasons.map((season) => (\n              <option key={season} value={season}>\n                {season}\n              </option>\n            ))}\n          </Select>\n        </Label>\n      </div>\n\n      <div style={{ marginBottom: '20px' }}>\n        <ChartCard title=\"Payouts\">\n          <Bar data={chartData}\n            options={chartOptions}\n            getElementAtEvent={(event, chartElements) => handleBarClick(event, chartElements)}\n          />\n        </ChartCard>\n      </div>\n      {/* Dropdown to select user */}\n      <div style={{ marginBottom: '20px' }}>\n        <Label>\n          <strong>User</strong>\n          <Select\n            className=\"mb-4\"\n            value={selectedUser}\n            onChange={handleUserDropdownChange} // Call handleUserDropdownChange on change\n          >\n            <option value=\"\">All Users</option>\n            {users.map((user) => (\n              <option key={user.username} value={user.username}>\n                {user.name}\n              </option>\n            ))}\n          </Select>\n        </Label>\n      </div>\n\n\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell\n                className=\"cursor-pointer\"\n                onClick={() => {\n                  setSortBy('username');\n                  setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n                }}\n              >\n                <div className=\"flex items-center\">\n                  User\n                  {sortBy === 'username' && (\n                    <Icon\n                      className={`ml-1 transform ${sortDirection === 'asc' ? 'rotate-180' : ''}`}\n                      icon={arrowDown}\n                    />\n                  )}\n                </div>\n              </TableCell>\n              <TableCell\n                className=\"cursor-pointer\"\n                onClick={() => {\n                  setSortBy('pool');\n                  setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n                }}\n              >\n                <div className=\"flex items-center\">\n                  Pool\n                  {sortBy === 'pool' && (\n                    <Icon\n                      className={`ml-1 transform ${sortDirection === 'asc' ? 'rotate-180' : ''}`}\n                      icon={arrowDown}\n                    />\n                  )}\n                </div>\n              </TableCell>\n              <TableCell\n                className=\"cursor-pointer\"\n                onClick={() => {\n                  setSortBy('season');\n                  setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n                }}\n              >\n                <div className=\"flex items-center\">\n                  Season\n                  {sortBy === 'season' && (\n                    <Icon\n                      className={`ml-1 transform ${sortDirection === 'asc' ? 'rotate-180' : ''}`}\n                      icon={arrowDown}\n                    />\n                  )}\n                </div>\n              </TableCell>\n              <TableCell\n                className=\"cursor-pointer\"\n                onClick={() => {\n                  setSortBy('week');\n                  setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n                }}\n              >\n                <div className=\"flex items-center\">\n                  Week\n                  {sortBy === 'week' && (\n                    <Icon\n                      className={`ml-1 transform ${sortDirection === 'asc' ? 'rotate-180' : ''}`}\n                      icon={arrowDown}\n                    />\n                  )}\n                </div>\n              </TableCell>\n              <TableCell\n                className=\"cursor-pointer\"\n                onClick={() => {\n                  setSortBy('amount');\n                  setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n                }}\n              >\n                <div className=\"flex items-center\">\n                  Amount\n                  {sortBy === 'amount' && (\n                    <Icon\n                      className={`ml-1 transform ${sortDirection === 'asc' ? 'rotate-180' : ''}`}\n                      icon={arrowDown}\n                    />\n                  )}\n                </div>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {paginatedData.map((payout, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-medium\">{payout.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-medium\">{payout.pool}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-medium\">{payout.season}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-medium\">{payout.week}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-medium\">{formatAmount(payout.amount)}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        {/* Pagination component */}\n        <TableFooter>\n          {totalResults > resultsPerPage && (\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              onChange={onPageChangeTable}\n              currentPage={pageTable}\n              label=\"Table navigation\"\n            />\n          )}\n        </TableFooter>\n\n      </TableContainer>\n    </>\n  );\n}\n\nexport default PayoutDetails;\n"]},"metadata":{},"sourceType":"module"}