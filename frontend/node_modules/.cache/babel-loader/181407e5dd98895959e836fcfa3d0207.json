{"ast":null,"code":"import _slicedToArray from\"/Users/ryan.gillies/Documents/side_judge/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useLocation}from'react-router-dom';function AccessibleNavigationAnnouncer(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var location=useLocation();useEffect(function(){// ignore the /\nif(location.pathname.slice(1)){// make sure navigation has occurred and screen reader is ready\nsetTimeout(function(){return setMessage(\"Navigated to \".concat(location.pathname.slice(1),\" page.\"));},500);}else{setMessage('');}},[location]);return/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\",role:\"status\",\"aria-live\":\"polite\",\"aria-atomic\":\"true\"},message);}export default AccessibleNavigationAnnouncer;","map":{"version":3,"sources":["/Users/ryan.gillies/Documents/side_judge/frontend/src/components/AccessibleNavigationAnnouncer.js"],"names":["React","useState","useEffect","useLocation","AccessibleNavigationAnnouncer","message","setMessage","location","pathname","slice","setTimeout"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAEA,QAASC,CAAAA,6BAAT,EAAyC,eACTH,QAAQ,CAAC,EAAD,CADC,wCAChCI,OADgC,eACvBC,UADuB,eAEvC,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CAEAD,SAAS,CAAC,UAAM,CACd;AACA,GAAIK,QAAQ,CAACC,QAAT,CAAkBC,KAAlB,CAAwB,CAAxB,CAAJ,CAAgC,CAC9B;AACAC,UAAU,CAAC,iBAAMJ,CAAAA,UAAU,wBAAiBC,QAAQ,CAACC,QAAT,CAAkBC,KAAlB,CAAwB,CAAxB,CAAjB,WAAhB,EAAD,CAAuE,GAAvE,CAAV,CACD,CAHD,IAGO,CACLH,UAAU,CAAC,EAAD,CAAV,CACD,CACF,CARQ,CAQN,CAACC,QAAD,CARM,CAAT,CAUA,mBACE,4BAAM,SAAS,CAAC,SAAhB,CAA0B,IAAI,CAAC,QAA/B,CAAwC,YAAU,QAAlD,CAA2D,cAAY,MAAvE,EACGF,OADH,CADF,CAKD,CAED,cAAeD,CAAAA,6BAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nfunction AccessibleNavigationAnnouncer() {\n  const [message, setMessage] = useState('')\n  const location = useLocation()\n\n  useEffect(() => {\n    // ignore the /\n    if (location.pathname.slice(1)) {\n      // make sure navigation has occurred and screen reader is ready\n      setTimeout(() => setMessage(`Navigated to ${location.pathname.slice(1)} page.`), 500)\n    } else {\n      setMessage('')\n    }\n  }, [location])\n\n  return (\n    <span className=\"sr-only\" role=\"status\" aria-live=\"polite\" aria-atomic=\"true\">\n      {message}\n    </span>\n  )\n}\n\nexport default AccessibleNavigationAnnouncer\n"]},"metadata":{},"sourceType":"module"}