{"version":3,"sources":["components/Cards/LeaderboardCard.js","components/Chart/ChartLegend.js","utils/demo/chartsData.js","../node_modules/classnames/index.js","components/RoundIcon.js","utils/demo/tableData.js","pages/Dashboard.js"],"names":["LeaderboardCard","title","lines","selected","onClick","headers","reduce","acc","user","player","position","week","opponent","score","record","points","points_against","net_points","className","map","index","key","ChartLegend","legends","legend","color","doughnutLegends","lineLegends","barLegends","doughnutOptions","data","datasets","backgroundColor","label","labels","options","responsive","cutoutPercentage","display","lineOptions","borderColor","fill","tooltips","mode","intersect","hover","scales","x","scaleLabel","labelString","y","barOptions","borderWidth","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","call","join","module","exports","default","RoundIcon","avatar","name","job","amount","status","date","Dashboard","useState","page","setPage","setData","totalResults","response","useEffect","slice","PageTitle","src","alt","type","Date","toLocaleDateString","resultsPerPage","onChange","p","ChartCard"],"mappings":"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","file":"static/js/4.1b8b465e.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, CardBody } from '@windmill/react-ui';\n\nfunction LeaderboardCard({ title, lines, selected, onClick }) {\n  \n  const headers = lines.reduce((acc, { user, player, position, week, opponent, score, record, points, points_against, net_points }) => {\n    if (user) acc.user = true;\n    if (player) acc.player = true;\n    if (week) acc.week = true;\n    if (opponent) acc.opponent = true;\n    if (score) acc.score = true;\n    if (record) acc.record = true;\n    if (points) acc.points = true;\n    if (points_against) acc.points_against = true;\n    if (net_points) acc.net_points = true;\n    if (position) acc.position = true;\n    return acc;\n  }, {});\n\n  return (\n    <Card className={selected ? 'bg-blue-200' : ''} onClick={onClick}>\n      {/* Title with padding */}\n      <p className=\"text-lg font-semibold mb-2 text-center pt-4 text-gray-700 dark:text-gray-200\">{title}</p>\n      <CardBody className=\"flex flex-col\">\n        {/* Render headers */}\n        <div className=\"flex items-center\">\n          {headers.user && (\n            <div className=\"w-2/5 text-left ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">User</p>\n            </div>\n          )}\n          {headers.player && (\n            <div className=\"w-2/5 text-left ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Player</p>\n            </div>\n          )}\n          {headers.position &&(\n            <div className=\"w-1/5 text-left ml-4\">\n            <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Position</p>\n          </div>          )}\n          {headers.opponent && (\n            <div className=\"w-2/5 text-left ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Opponent</p>\n            </div>\n          )}\n          {headers.week && (\n            <div className=\"w-1/5 text-left ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Week</p>\n            </div>\n          )}\n          {headers.score && (\n            <div className=\"w-1/5 text-center ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\"></p>\n            </div>\n          )}\n          {headers.record && (\n            <div className=\"w-1/5 text-center ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Record</p>\n            </div>\n          )}\n          {headers.points && (\n            <div className=\"w-1/5 text-center ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Pts For</p>\n            </div>\n          )}\n          {headers.points_against && (\n            <div className=\"w-1/5 text-center ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Pts Against</p>\n            </div>\n          )}\n          {headers.net_points && (\n            <div className=\"w-1/5 text-center ml-4\">\n              <p className=\"text-sm font-bold text-gray-600 dark:text-gray-100\">Net Points</p>\n            </div>\n          )}\n        </div>\n        {/* Render each row */}\n        {lines.map(({ user, player, position, week, opponent, score, record, points, points_against, net_points }, index) => (\n          <div key={index} className=\"flex items-center\">\n            {user && (\n              <div className=\"w-2/5 text-left ml-4\">\n                <p className=\"text-sm font-semibold text-gray-600 dark:text-gray-100\">{user}</p>\n              </div>\n            )}\n            {player && (\n              <div className=\"w-2/5 text-left ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{player}</p>\n              </div>\n            )}\n            {position && (\n              <div className=\"w-1/5 text-left ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{position}</p>\n              </div>\n            )}\n            {opponent && (\n              <div className=\"w-2/5 text-left ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{opponent}</p>\n              </div>\n            )}\n            {week && (\n              <div className=\"w-1/5 text-left ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{week}</p>\n              </div>\n            )}\n            {score && (\n              <div className=\"w-1/5 text-right ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{score}</p>\n              </div>\n            )}\n            {record && (\n              <div className=\"w-1/5 text-right ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{record}</p>\n              </div>\n            )}\n            {points && (\n              <div className=\"w-1/5 text-right ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{points}</p>\n              </div>\n            )}\n            {points_against && (\n              <div className=\"w-1/5 text-right ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{points_against}</p>\n              </div>\n            )}\n            {net_points && (\n              <div className=\"w-1/5 text-right ml-4\">\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-100\">{net_points}</p>\n              </div>\n            )}\n          </div>\n        ))}\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default LeaderboardCard;\n","import React from 'react'\n\nfunction ChartLegend({ legends }) {\n  return (\n    <div className=\"flex justify-center mt-4 space-x-3 text-sm text-gray-600 dark:text-gray-400\">\n      {legends.map((legend) => (\n        <div className=\"flex items-center\" key={legend.title}>\n          <span className={`inline-block w-3 h-3 mr-1 ${legend.color} rounded-full`}></span>\n          <span>{legend.title}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ChartLegend\n","export const doughnutLegends = [\n  { title: 'Shirts', color: 'bg-blue-500' },\n  { title: 'Shoes', color: 'bg-teal-600' },\n  { title: 'Bags', color: 'bg-purple-600' },\n]\n\nexport const lineLegends = [\n  { title: 'Organic', color: 'bg-teal-600' },\n  { title: 'Paid', color: 'bg-purple-600' },\n]\n\nexport const barLegends = [\n  { title: 'Shoes', color: 'bg-teal-600' },\n  { title: 'Bags', color: 'bg-purple-600' },\n]\n\nexport const doughnutOptions = {\n  data: {\n    datasets: [\n      {\n        data: [33, 33, 33],\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: ['#0694a2', '#1c64f2', '#7e3af2'],\n        label: 'Dataset 1',\n      },\n    ],\n    labels: ['Shoes', 'Shirts', 'Bags'],\n  },\n  options: {\n    responsive: true,\n    cutoutPercentage: 80,\n  },\n  legend: {\n    display: false,\n  },\n}\n\nexport const lineOptions = {\n  data: {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        label: 'Organic',\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: '#0694a2',\n        borderColor: '#0694a2',\n        data: [43, 48, 40, 54, 67, 73, 70],\n        fill: false,\n      },\n      {\n        label: 'Paid',\n        fill: false,\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: '#7e3af2',\n        borderColor: '#7e3af2',\n        data: [24, 50, 64, 74, 52, 51, 65],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n    tooltips: {\n      mode: 'index',\n      intersect: false,\n    },\n    hover: {\n      mode: 'nearest',\n      intersect: true,\n    },\n    scales: {\n      x: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: 'Month',\n        },\n      },\n      y: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: 'Value',\n        },\n      },\n    },\n  },\n  legend: {\n    display: false,\n  },\n}\n\nexport const barOptions = {\n  data: {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        label: 'Shoes',\n        backgroundColor: '#0694a2',\n        // borderColor: window.chartColors.red,\n        borderWidth: 1,\n        data: [-3, 14, 52, 74, 33, 90, 70],\n      },\n      {\n        label: 'Bags',\n        backgroundColor: '#7e3af2',\n        // borderColor: window.chartColors.blue,\n        borderWidth: 1,\n        data: [66, 33, 43, 12, 54, 62, 84],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n  },\n  legend: {\n    display: false,\n  },\n}\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className,\n}) {\n  const baseStyle = 'p-3 rounded-full'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className=\"w-5 h-5\" />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","export default [\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/lokesh_coder/128.jpg',\n    name: 'Chandler Jacobi',\n    job: 'Direct Security Executive',\n    amount: 989.4,\n    status: 'primary',\n    date: 'Mon Feb 03 2020 04:13:15 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg',\n    name: 'Monserrat Marquardt',\n    job: 'Forward Accountability Producer',\n    amount: 471.44,\n    status: 'danger',\n    date: 'Fri Nov 29 2019 10:43:17 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jjsiii/128.jpg',\n    name: 'Lonie Wyman',\n    job: 'Legacy Program Director',\n    amount: 934.24,\n    status: 'success',\n    date: 'Fri Apr 03 2020 03:07:53 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/holdenweb/128.jpg',\n    name: 'Corine Abernathy',\n    job: 'Chief Factors Planner',\n    amount: 351.28,\n    status: 'warning',\n    date: 'Fri Jun 21 2019 20:21:55 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/operatino/128.jpg',\n    name: 'Lorenz Botsford',\n    job: 'Central Accountability Developer',\n    amount: 355.3,\n    status: 'neutral',\n    date: 'Wed Aug 28 2019 15:31:43 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/akmur/128.jpg',\n    name: 'Everette Botsford',\n    job: 'Product Group Architect',\n    amount: 525.42,\n    status: 'success',\n    date: 'Thu Jan 16 2020 09:53:33 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nateschulte/128.jpg',\n    name: 'Marilou Beahan',\n    job: 'Future Security Planner',\n    amount: 414.99,\n    status: 'success',\n    date: 'Mon Oct 28 2019 14:44:31 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jerrybai1907/128.jpg',\n    name: 'Ceasar Sauer',\n    job: 'Direct Brand Specialist',\n    amount: 488.0,\n    status: 'primary',\n    date: 'Tue Jul 23 2019 00:24:44 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg',\n    name: 'Rae McDermott',\n    job: 'Lead Branding Engineer',\n    amount: 502.69,\n    status: 'danger',\n    date: 'Sat Feb 01 2020 12:57:03 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/rtgibbons/128.jpg',\n    name: 'Mable Steuber',\n    job: 'National Group Executive',\n    amount: 911.09,\n    status: 'danger',\n    date: 'Mon Sep 09 2019 12:03:25 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/danthms/128.jpg',\n    name: 'Julian Glover',\n    job: 'Global Branding Assistant',\n    amount: 656.94,\n    status: 'danger',\n    date: 'Fri May 22 2020 17:46:12 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/andysolomon/128.jpg',\n    name: 'Duncan Toy',\n    job: 'Central Intranet Manager',\n    amount: 120.78,\n    status: 'danger',\n    date: 'Sun Nov 17 2019 11:59:50 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jesseddy/128.jpg',\n    name: 'Blanche Friesen',\n    job: 'Forward Identity Executive',\n    amount: 676.95,\n    status: 'danger',\n    date: 'Sun Jun 21 2020 16:46:39 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/haruintesettden/128.jpg',\n    name: 'Orion Koepp',\n    job: 'Global Accountability Strategist',\n    amount: 447.56,\n    status: 'danger',\n    date: 'Thu Jun 04 2020 18:29:41 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/vocino/128.jpg',\n    name: 'Dakota Vandervort',\n    job: 'Future Assurance Coordinator',\n    amount: 765.22,\n    status: 'danger',\n    date: 'Fri Jan 31 2020 13:02:55 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/zaki3d/128.jpg',\n    name: 'Lily Collier',\n    job: 'Forward Configuration Orchestrator',\n    amount: 449.11,\n    status: 'danger',\n    date: 'Sun Aug 18 2019 14:52:01 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/evanshajed/128.jpg',\n    name: 'Kayleigh Schumm',\n    job: 'Central Division Agent',\n    amount: 65.54,\n    status: 'danger',\n    date: 'Wed May 06 2020 17:49:09 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/mdsisto/128.jpg',\n    name: 'General McGlynn',\n    job: 'Central Web Analyst',\n    amount: 30.51,\n    status: 'danger',\n    date: 'Mon Mar 30 2020 01:24:54 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/woodydotmx/128.jpg',\n    name: 'Shayna Schumm',\n    job: 'Future Directives Engineer',\n    amount: 313.73,\n    status: 'danger',\n    date: 'Wed Jul 03 2019 10:01:06 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/mfacchinello/128.jpg',\n    name: 'Giovanna Sanford',\n    job: 'Dynamic Interactions Executive',\n    amount: 398.3,\n    status: 'danger',\n    date: 'Tue Oct 08 2019 17:08:43 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/ademilter/128.jpg',\n    name: 'Emie Mante',\n    job: 'Direct Factors Supervisor',\n    amount: 142.51,\n    status: 'danger',\n    date: 'Wed Jul 24 2019 19:17:16 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/tobysaxon/128.jpg',\n    name: 'Chance Muller',\n    job: 'Lead Usability Planner',\n    amount: 963.26,\n    status: 'danger',\n    date: 'Sun Dec 01 2019 14:04:10 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg',\n    name: 'Armani Torphy',\n    job: 'Forward Functionality Analyst',\n    amount: 445.23,\n    status: 'danger',\n    date: 'Tue Dec 24 2019 13:28:36 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/devinhalladay/128.jpg',\n    name: 'Braeden Ward',\n    job: 'Central Integration Director',\n    amount: 588.53,\n    status: 'danger',\n    date: 'Wed Apr 15 2020 21:40:11 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/kimcool/128.jpg',\n    name: 'Malcolm Price',\n    job: 'District Program Planner',\n    amount: 181.93,\n    status: 'danger',\n    date: 'Thu Oct 24 2019 07:09:03 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/angelceballos/128.jpg',\n    name: 'Susan Jast',\n    job: 'Future Paradigm Associate',\n    amount: 928.41,\n    status: 'danger',\n    date: 'Sun Feb 09 2020 23:22:23 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/peachananr/128.jpg',\n    name: 'Torrey Reynolds',\n    job: 'Lead Security Agent',\n    amount: 447.37,\n    status: 'danger',\n    date: 'Mon Oct 28 2019 04:10:39 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/agromov/128.jpg',\n    name: 'Travon Harber',\n    job: 'Legacy Marketing Facilitator',\n    amount: 422.48,\n    status: 'danger',\n    date: 'Sat Nov 09 2019 05:04:09 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/danpliego/128.jpg',\n    name: 'Hattie Gutkowski',\n    job: 'Chief Configuration Supervisor',\n    amount: 714.34,\n    status: 'danger',\n    date: 'Tue Oct 22 2019 22:36:23 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/ahmetalpbalkan/128.jpg',\n    name: 'Demarco Lang',\n    job: 'Investor Program Designer',\n    amount: 536.92,\n    status: 'danger',\n    date: 'Wed Apr 08 2020 03:05:59 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nasirwd/128.jpg',\n    name: 'Glennie Ziemann',\n    job: 'Dynamic Interactions Analyst',\n    amount: 597.25,\n    status: 'danger',\n    date: 'Mon Jun 22 2020 21:27:06 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/juaumlol/128.jpg',\n    name: 'Alta Howe',\n    job: 'District Intranet Executive',\n    amount: 42.28,\n    status: 'danger',\n    date: 'Sat Oct 12 2019 22:57:22 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/victordeanda/128.jpg',\n    name: 'Sydnee Gottlieb',\n    job: 'Global Response Specialist',\n    amount: 868.92,\n    status: 'danger',\n    date: 'Wed Feb 05 2020 05:17:34 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/baumannzone/128.jpg',\n    name: 'Arlene Schmitt',\n    job: 'Lead Metrics Consultant',\n    amount: 364.68,\n    status: 'danger',\n    date: 'Thu Oct 03 2019 08:47:32 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/chacky14/128.jpg',\n    name: 'Hilda Schoen',\n    job: 'National Solutions Facilitator',\n    amount: 260.91,\n    status: 'danger',\n    date: 'Wed Dec 04 2019 06:28:30 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/kostaspt/128.jpg',\n    name: 'Chase Bahringer',\n    job: 'Dynamic Communications Designer',\n    amount: 454.61,\n    status: 'danger',\n    date: 'Mon Nov 25 2019 16:59:38 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/timgthomas/128.jpg',\n    name: 'Lucile Hansen',\n    job: 'Customer Usability Facilitator',\n    amount: 982.22,\n    status: 'danger',\n    date: 'Sun Aug 25 2019 17:15:59 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/safrankov/128.jpg',\n    name: 'Mollie Heaney',\n    job: 'Forward Communications Director',\n    amount: 390.33,\n    status: 'danger',\n    date: 'Mon Jul 22 2019 01:45:19 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/justme_timothyg/128.jpg',\n    name: 'Bennie Kuvalis',\n    job: 'Future Factors Agent',\n    amount: 456.64,\n    status: 'danger',\n    date: 'Sat Feb 08 2020 07:55:08 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/Chakintosh/128.jpg',\n    name: 'Jodie Luettgen',\n    job: 'Customer Implementation Associate',\n    amount: 398.37,\n    status: 'danger',\n    date: 'Tue Jun 09 2020 11:19:53 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/weavermedia/128.jpg',\n    name: 'Bethel Quitzon',\n    job: 'Dynamic Web Strategist',\n    amount: 183.58,\n    status: 'danger',\n    date: 'Sun Dec 29 2019 18:56:54 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/gmourier/128.jpg',\n    name: 'Jon Dietrich',\n    job: 'Legacy Creative Planner',\n    amount: 439.01,\n    status: 'danger',\n    date: 'Sun Dec 29 2019 11:11:34 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/stefvdham/128.jpg',\n    name: 'Nakia Kihn',\n    job: 'Central Interactions Coordinator',\n    amount: 824.12,\n    status: 'danger',\n    date: 'Sun Sep 15 2019 06:43:56 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/thedamianhdez/128.jpg',\n    name: 'Assunta Grady',\n    job: 'Investor Operations Specialist',\n    amount: 172.97,\n    status: 'danger',\n    date: 'Tue Dec 17 2019 01:46:37 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nehfy/128.jpg',\n    name: 'Lukas Klocko',\n    job: 'Human Usability Associate',\n    amount: 515.74,\n    status: 'danger',\n    date: 'Mon Jun 15 2020 04:04:32 GMT-0300 (Brasilia Standard Time)',\n  },\n]\n","import React, { useState, useEffect } from 'react'\n\nimport InfoCard from '../components/Cards/LeaderboardCard'\nimport ChartCard from '../components/Chart/ChartCard'\nimport { Doughnut, Line } from 'react-chartjs-2'\nimport ChartLegend from '../components/Chart/ChartLegend'\nimport PageTitle from '../components/Typography/PageTitle'\nimport { ChatIcon, CartIcon, MoneyIcon, PeopleIcon } from '../icons'\nimport RoundIcon from '../components/RoundIcon'\nimport response from '../utils/demo/tableData'\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from '@windmill/react-ui'\n\nimport {\n  doughnutOptions,\n  lineOptions,\n  doughnutLegends,\n  lineLegends,\n} from '../utils/demo/chartsData'\n\nfunction Dashboard() {\n  const [page, setPage] = useState(1)\n  const [data, setData] = useState([])\n\n  // pagination setup\n  const resultsPerPage = 10\n  const totalResults = response.length\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p)\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage))\n  }, [page])\n\n  return (\n    <>\n      <PageTitle>Dashboard</PageTitle>\n\n      {/* <!-- Cards -->\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\">\n        <InfoCard title=\"Total clients\" value=\"6389\">\n          <RoundIcon\n            icon={PeopleIcon}\n            iconColorClass=\"text-orange-500 dark:text-orange-100\"\n            bgColorClass=\"bg-orange-100 dark:bg-orange-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Account balance\" value=\"$ 46,760.89\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-green-500 dark:text-green-100\"\n            bgColorClass=\"bg-green-100 dark:bg-green-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"New sales\" value=\"376\">\n          <RoundIcon\n            icon={CartIcon}\n            iconColorClass=\"text-blue-500 dark:text-blue-100\"\n            bgColorClass=\"bg-blue-100 dark:bg-blue-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Pending contacts\" value=\"35\">\n          <RoundIcon\n            icon={ChatIcon}\n            iconColorClass=\"text-teal-500 dark:text-teal-100\"\n            bgColorClass=\"bg-teal-100 dark:bg-teal-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n      </div> */}\n\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Client</TableCell>\n              <TableCell>Amount</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {data.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <Avatar className=\"hidden mr-3 md:block\" src={user.avatar} alt=\"User image\" />\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">{user.job}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <Badge type={user.status}>{user.status}</Badge>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{new Date(user.date).toLocaleDateString()}</span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n\n      <PageTitle>Charts</PageTitle>\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2\">\n        <ChartCard title=\"Revenue\">\n          <Doughnut {...doughnutOptions} />\n          <ChartLegend legends={doughnutLegends} />\n        </ChartCard>\n\n        <ChartCard title=\"Traffic\">\n          <Line {...lineOptions} />\n          <ChartLegend legends={lineLegends} />\n        </ChartCard>\n      </div>\n    </>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}